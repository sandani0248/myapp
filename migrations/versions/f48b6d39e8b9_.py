"""empty message

Revision ID: f48b6d39e8b9
Revises: 
Create Date: 2025-10-28 09:44:41.364502

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f48b6d39e8b9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('aws_credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=120), nullable=False),
    sa.Column('auth_type', sa.String(length=20), nullable=False),
    sa.Column('aws_access_key_id', sa.String(length=120), nullable=True),
    sa.Column('encrypted_aws_secret_access_key', sa.String(length=512), nullable=True),
    sa.Column('role_arn', sa.String(length=255), nullable=True),
    sa.Column('default_region', sa.String(length=32), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('last_sync_status', sa.String(length=255), nullable=True),
    sa.Column('last_sync_time', sa.DateTime(), nullable=True),
    sa.Column('server_username', sa.String(length=120), nullable=True),
    sa.Column('encrypted_server_password', sa.String(length=512), nullable=True),
    sa.Column('encrypted_pem_key', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('aws_credentials', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_aws_credentials_account_name'), ['account_name'], unique=True)

    op.create_table('amis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_id', sa.String(length=64), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.String(length=64), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('amis', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_amis_image_id'), ['image_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_amis_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_amis_region'), ['region'], unique=False)

    op.create_table('backup_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('backup_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_groups_name'), ['name'], unique=False)

    op.create_table('elastic_ips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('public_ip', sa.String(length=45), nullable=True),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('allocation_id', sa.String(length=64), nullable=True),
    sa.Column('eni_id_str', sa.String(length=64), nullable=True),
    sa.Column('instance_id_str', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('elastic_ips', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_elastic_ips_allocation_id'), ['allocation_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_elastic_ips_public_ip'), ['public_ip'], unique=False)
        batch_op.create_index(batch_op.f('ix_elastic_ips_region'), ['region'], unique=False)

    op.create_table('snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('snapshot_id', sa.String(length=64), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('volume_id', sa.String(length=64), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('volume_size_gb', sa.Integer(), nullable=True),
    sa.Column('state', sa.String(length=32), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('snapshots', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_snapshots_region'), ['region'], unique=False)
        batch_op.create_index(batch_op.f('ix_snapshots_snapshot_id'), ['snapshot_id'], unique=True)

    op.create_table('vpcs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vpc_id', sa.String(length=64), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('cidr_block', sa.String(length=64), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vpcs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vpcs_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_vpcs_region'), ['region'], unique=False)
        batch_op.create_index(batch_op.f('ix_vpcs_vpc_id'), ['vpc_id'], unique=True)

    op.create_table('backup_job_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('instance_id_str', sa.String(length=64), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('backup_type', sa.String(length=20), nullable=False),
    sa.Column('parent_ami_id', sa.String(length=64), nullable=True),
    sa.Column('is_incremental', sa.Boolean(), nullable=True),
    sa.Column('ami_id_str', sa.String(length=64), nullable=True),
    sa.Column('snapshots_created', sa.JSON(), nullable=True),
    sa.Column('instance_type', sa.String(length=64), nullable=True),
    sa.Column('ami_used', sa.String(length=64), nullable=True),
    sa.Column('key_pair_name', sa.String(length=255), nullable=True),
    sa.Column('iam_role_arn', sa.String(length=512), nullable=True),
    sa.Column('vpc_id_str', sa.String(length=64), nullable=True),
    sa.Column('subnet_id_str', sa.String(length=64), nullable=True),
    sa.Column('availability_zone', sa.String(length=64), nullable=True),
    sa.Column('security_group_ids', sa.JSON(), nullable=True),
    sa.Column('private_ip', sa.String(length=45), nullable=True),
    sa.Column('public_ip', sa.String(length=45), nullable=True),
    sa.Column('elastic_ip_allocation_id', sa.String(length=64), nullable=True),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('user_data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['backup_groups.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('backup_job_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backup_job_logs_instance_id_str'), ['instance_id_str'], unique=False)

    op.create_table('backup_policies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('backup_strategy', sa.String(length=20), nullable=False),
    sa.Column('ami_interval_value', sa.Integer(), nullable=False),
    sa.Column('ami_interval_unit', sa.String(length=20), nullable=False),
    sa.Column('snapshot_interval_value', sa.Integer(), nullable=False),
    sa.Column('snapshot_interval_unit', sa.String(length=20), nullable=False),
    sa.Column('retention_days', sa.Integer(), nullable=False),
    sa.Column('retention_count', sa.Integer(), nullable=True),
    sa.Column('last_ami_time', sa.DateTime(), nullable=True),
    sa.Column('last_snapshot_time', sa.DateTime(), nullable=True),
    sa.Column('last_run_time', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['backup_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('group_id')
    )
    op.create_table('route_tables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_table_id', sa.String(length=64), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('vpc_id_str', sa.String(length=64), nullable=True),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vpc_id_str'], ['vpcs.vpc_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('route_tables', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_route_tables_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_route_tables_region'), ['region'], unique=False)
        batch_op.create_index(batch_op.f('ix_route_tables_route_table_id'), ['route_table_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_route_tables_vpc_id_str'), ['vpc_id_str'], unique=False)

    op.create_table('security_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.String(length=64), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('vpc_id_str', sa.String(length=64), nullable=True),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('group_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vpc_id_str'], ['vpcs.vpc_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('security_groups', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_security_groups_group_id'), ['group_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_security_groups_group_name'), ['group_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_security_groups_region'), ['region'], unique=False)
        batch_op.create_index(batch_op.f('ix_security_groups_vpc_id_str'), ['vpc_id_str'], unique=False)

    op.create_table('subnets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subnet_id', sa.String(length=64), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('vpc_id_str', sa.String(length=64), nullable=True),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('cidr_block', sa.String(length=64), nullable=True),
    sa.Column('availability_zone', sa.String(length=32), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vpc_id_str'], ['vpcs.vpc_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subnets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subnets_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_subnets_region'), ['region'], unique=False)
        batch_op.create_index(batch_op.f('ix_subnets_subnet_id'), ['subnet_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_subnets_vpc_id_str'), ['vpc_id_str'], unique=False)

    op.create_table('enis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('eni_id', sa.String(length=64), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('subnet_id_str', sa.String(length=64), nullable=True),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('private_ip', sa.String(length=45), nullable=True),
    sa.Column('public_ip', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subnet_id_str'], ['subnets.subnet_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('enis', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_enis_eni_id'), ['eni_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_enis_region'), ['region'], unique=False)
        batch_op.create_index(batch_op.f('ix_enis_subnet_id_str'), ['subnet_id_str'], unique=False)

    op.create_table('instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_id', sa.String(length=64), nullable=False),
    sa.Column('aws_account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('instance_type', sa.String(length=64), nullable=True),
    sa.Column('state', sa.String(length=32), nullable=True),
    sa.Column('region', sa.String(length=32), nullable=True),
    sa.Column('private_ip', sa.String(length=45), nullable=True),
    sa.Column('public_ip', sa.String(length=45), nullable=True),
    sa.Column('launch_time', sa.DateTime(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('ami_id_str', sa.String(length=64), nullable=True),
    sa.Column('vpc_id_str', sa.String(length=64), nullable=True),
    sa.Column('subnet_id_str', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['aws_account_id'], ['aws_credentials.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subnet_id_str'], ['subnets.subnet_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vpc_id_str'], ['vpcs.vpc_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('instances', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_instances_ami_id_str'), ['ami_id_str'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_instance_id'), ['instance_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_instances_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_region'), ['region'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_subnet_id_str'), ['subnet_id_str'], unique=False)
        batch_op.create_index(batch_op.f('ix_instances_vpc_id_str'), ['vpc_id_str'], unique=False)

    op.create_table('routes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('route_table_id_int', sa.Integer(), nullable=False),
    sa.Column('destination_cidr', sa.String(length=64), nullable=True),
    sa.Column('target_gateway_id', sa.String(length=64), nullable=True),
    sa.Column('target_instance_id', sa.String(length=64), nullable=True),
    sa.Column('target_eni_id', sa.String(length=64), nullable=True),
    sa.Column('origin', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['route_table_id_int'], ['route_tables.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('security_group_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sg_id', sa.Integer(), nullable=False),
    sa.Column('rule_type', sa.String(length=10), nullable=True),
    sa.Column('protocol', sa.String(length=32), nullable=True),
    sa.Column('from_port', sa.Integer(), nullable=True),
    sa.Column('to_port', sa.Integer(), nullable=True),
    sa.Column('cidr_ipv4', sa.String(length=128), nullable=True),
    sa.Column('source_security_group_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['sg_id'], ['security_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('instance_backup_group_association',
    sa.Column('ec2_instance_id', sa.Integer(), nullable=False),
    sa.Column('backup_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['backup_group_id'], ['backup_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['ec2_instance_id'], ['instances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ec2_instance_id', 'backup_group_id')
    )
    op.create_table('instance_sg_association',
    sa.Column('ec2_instance_id', sa.Integer(), nullable=False),
    sa.Column('sg_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ec2_instance_id'], ['instances.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sg_id'], ['security_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ec2_instance_id', 'sg_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('instance_sg_association')
    op.drop_table('instance_backup_group_association')
    op.drop_table('security_group_rules')
    op.drop_table('routes')
    with op.batch_alter_table('instances', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_instances_vpc_id_str'))
        batch_op.drop_index(batch_op.f('ix_instances_subnet_id_str'))
        batch_op.drop_index(batch_op.f('ix_instances_region'))
        batch_op.drop_index(batch_op.f('ix_instances_name'))
        batch_op.drop_index(batch_op.f('ix_instances_instance_id'))
        batch_op.drop_index(batch_op.f('ix_instances_ami_id_str'))

    op.drop_table('instances')
    with op.batch_alter_table('enis', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_enis_subnet_id_str'))
        batch_op.drop_index(batch_op.f('ix_enis_region'))
        batch_op.drop_index(batch_op.f('ix_enis_eni_id'))

    op.drop_table('enis')
    with op.batch_alter_table('subnets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subnets_vpc_id_str'))
        batch_op.drop_index(batch_op.f('ix_subnets_subnet_id'))
        batch_op.drop_index(batch_op.f('ix_subnets_region'))
        batch_op.drop_index(batch_op.f('ix_subnets_name'))

    op.drop_table('subnets')
    with op.batch_alter_table('security_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_security_groups_vpc_id_str'))
        batch_op.drop_index(batch_op.f('ix_security_groups_region'))
        batch_op.drop_index(batch_op.f('ix_security_groups_group_name'))
        batch_op.drop_index(batch_op.f('ix_security_groups_group_id'))

    op.drop_table('security_groups')
    with op.batch_alter_table('route_tables', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_route_tables_vpc_id_str'))
        batch_op.drop_index(batch_op.f('ix_route_tables_route_table_id'))
        batch_op.drop_index(batch_op.f('ix_route_tables_region'))
        batch_op.drop_index(batch_op.f('ix_route_tables_name'))

    op.drop_table('route_tables')
    op.drop_table('backup_policies')
    with op.batch_alter_table('backup_job_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_job_logs_instance_id_str'))

    op.drop_table('backup_job_logs')
    with op.batch_alter_table('vpcs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vpcs_vpc_id'))
        batch_op.drop_index(batch_op.f('ix_vpcs_region'))
        batch_op.drop_index(batch_op.f('ix_vpcs_name'))

    op.drop_table('vpcs')
    with op.batch_alter_table('snapshots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_snapshots_snapshot_id'))
        batch_op.drop_index(batch_op.f('ix_snapshots_region'))

    op.drop_table('snapshots')
    with op.batch_alter_table('elastic_ips', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_elastic_ips_region'))
        batch_op.drop_index(batch_op.f('ix_elastic_ips_public_ip'))
        batch_op.drop_index(batch_op.f('ix_elastic_ips_allocation_id'))

    op.drop_table('elastic_ips')
    with op.batch_alter_table('backup_groups', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backup_groups_name'))

    op.drop_table('backup_groups')
    with op.batch_alter_table('amis', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_amis_region'))
        batch_op.drop_index(batch_op.f('ix_amis_name'))
        batch_op.drop_index(batch_op.f('ix_amis_image_id'))

    op.drop_table('amis')
    with op.batch_alter_table('aws_credentials', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_aws_credentials_account_name'))

    op.drop_table('aws_credentials')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
